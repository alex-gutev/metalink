## Path to compiler and tools

LISP = @LISP@
SED = @SED@


## Path to Documentation Converters

A2X = @A2X@

DB2X_XSLTPROC = @DB2X_XSLTPROC@
DB2X_TEXIXML = @DB2X_TEXIXML@

MAKEINFO = @MAKEINFO@
INSTALL_INFO = @INSTALL_INFO@

## Directories

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

datarootdir = @datarootdir@
datadir = @datadir@
mandir = @mandir@

infodir = @infodir@
htmldir = @htmldir@
pdfdir = @pdfdir@

pkgdatadir = @datadir@/@PACKAGE@


PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

# Add source directory to search path for out of source builds

srcdir = @srcdir@
VPATH = $(srcdir)


## Build Targets

all: tridashc js_runtime man info

plump_sources = plump/dom.lisp \
	plump/entities.lisp \
	plump/lexer.lisp \
	plump/package.lisp \
	plump/parser.lisp \
	plump/processing.lisp \
	plump/special-tags.lisp \
	plump/tag-dispatcher.lisp

sources = tridash.asd \
        src/package.lisp \
        src/interface.lisp \
        src/lexer.lisp \
        src/parser.lisp \
        src/operators.lisp \
	src/expressions.lisp \
	src/builder-interface.lisp \
        src/node.lisp \
        src/meta-node.lisp \
        src/module.lisp \
        src/module-table.lisp \
        src/conditions.lisp \
        src/outer-nodes.lisp \
	src/strictness.lisp \
        src/builder.lisp \
	src/macros.lisp \
	src/macro-runtime.lisp \
        src/coalescer.lisp \
        src/prog-builder.lisp \
        src/main.lisp \
        src/util/package.lisp \
        src/util/cut.lisp \
        src/util/macros.lisp \
        src/builders/html/package.lisp \
        src/builders/html/builder.lisp \
	src/builders/html/script-parser.lisp \
        src/backends/javascript/package.lisp \
        src/backends/javascript/ast.lisp \
        src/backends/javascript/print.lisp \
	src/backends/javascript/symbols.lisp \
        src/backends/javascript/backend.lisp \
        src/backends/javascript/functions.lisp \
        src/backends/javascript/html.lisp \
	$(plump_sources)

core_module_sources = \
	modules/core/operators.trd \
	modules/core/external.trd \
	modules/core/primitives.trd \
	modules/core/util.trd \
	modules/core/lists.trd \
	modules/core/introspection.trd \
	modules/core/pattern-match.trd \
	modules/core/types.trd \
	modules/core/macros.trd \
	modules/core/strings.trd

build.lisp: build.lisp.in
	$(SED) -e 's|@datadir[@]|$(pkgdatadir)|g' $< > $@

tridashc: build.lisp $(sources)
	$(LISP) --load $(srcdir)/tridash.asd --load $<


# JS Runtime Library

js_runtime_sources = src/backends/javascript/runtime/runtime.js \
	src/backends/javascript/runtime/queue.js \
	src/backends/javascript/runtime/functions.js \
	src/backends/javascript/runtime/exports.js

UGLIFYJS = @UGLIFYJS@

src/backends/javascript/runtime/tridash.min.js: $(js_runtime_sources)
	$(UGLIFYJS) --wrap Tridash -m -o $@ $^

js_runtime: src/backends/javascript/runtime/tridash.min.js


## Documentation

man: doc/tridashc.1

doc/tridashc.1: doc/tridashc.1.adoc
	- $(A2X) --doctype manpage --format manpage --no-xmllint --destination-dir doc $<


doc_files = doc/tridash.adoc \
	doc/syntax.adoc \
	doc/semantics.adoc \
	doc/core-libs.adoc \
	doc/optimization.adoc

# Info Documentation

doc/tridash.info: $(doc_files)
	- $(A2X) --format docbook --no-xmllint --destination-dir . $< && \
	$(DB2X_XSLTPROC) -s texi \
		--string-param output-file="tridash" \
		--string-param directory-category="Development" \
		--string-param directory-description="A programming language based on bindings" \
		tridash.xml -o tridash.txml && \
	$(DB2X_TEXIXML) --encoding=UTF-8 tridash.txml && \
	$(MAKEINFO) --force tridash.texi -o $@

info: doc/tridash.info


# HTML Documentation

doc/tridash.chunked: $(doc_files)
	$(A2X) --format chunked --no-xmllint --icons --destination-dir doc $<

html: doc/tridash.chunked


# PDF Documentation

doc/tridash.pdf: $(doc_files)
	$(A2X) --format pdf --dblatex-opts="-P latex.output.revhistory=0" --no-xmllint --icons --destination-dir doc $<

pdf: doc/tridash.pdf


## Clean Targets

clean: clean-docbook-temp
	rm -f build.lisp
	rm -f tridashc

distclean: clean
	rm -f Makefile
	rm -f config.log
	rm -f config.status

maintainer-clean: distclean
	rm -f doc/tridashc.1
	rm -f doc/tridash.info

# Clean temporary files created when converting docbook to other
# formats

clean-docbook-temp:
	rm -f tridash.xml
	rm -f tridash.txml
	rm -f tridash.texi

## Installation Targets

installdirs:
	install -d $(DESTDIR)$(bindir)
	install -d $(DESTDIR)$(pkgdatadir)/modules/core
	install -d $(DESTDIR)$(pkgdatadir)/backends/javascript
	install -d $(DESTDIR)$(mandir)/man1
	install -d $(DESTDIR)$(infodir)

install-bin:
	install -m 755 tridashc $(DESTDIR)$(bindir)

install-module-build-config: modules/core.yml
	install -m 644 $^ $(DESTDIR)$(pkgdatadir)/modules

install-modules: $(core_module_sources)
	install -m 644 $^ $(DESTDIR)$(pkgdatadir)/modules/core

install-js-runtime: src/backends/javascript/runtime/tridash.min.js
	install -m 644 $< $(DESTDIR)$(pkgdatadir)/backends/javascript

install-data: install-module-build-config install-modules install-js-runtime

install-man: doc/tridashc.1
	- install -m 644 doc/tridashc.1 $(DESTDIR)$(mandir)/man1
	- gzip -f $(DESTDIR)$(mandir)/man1/tridashc.1

install-info: doc/tridash.info
	- install -m 644 $< $(DESTDIR)$(infodir)
	- $(INSTALL_INFO) --dir-file="$(DESTDIR)$(infodir)/dir" \
		--name="Tridash" \
		"$(DESTDIR)$(infodir)/tridash.info"


install: all installdirs install-bin install-data install-man


uninstall-info:
	$(INSTALL_INFO) --delete $(DESTDIR)$(infodir)/tridash.info $(DESTDIR)$(infodir)/dir
	rm -f $(DESTDIR)$(infodir)/tridash.info

uninstall: uninstall-info
	rm -f $(DESTDIR)$(bindir)/tridashc
	rm -rf $(DESTDIR)$(pkgdatadir)
	rm -f $(DESTDIR)$(mandir)/man1/tridashc.1.gz


## Testing

check: check-compiler check-runtime

check-compiler:
	cd $(srcdir); \
	$(LISP) --load tridash.asd --load test/script.lisp


check-runtime: $(srcdir)/test/backends/javascript/runtime/tridash.js
	cd $(srcdir)/test/backends/javascript; npm test

$(srcdir)/test/backends/javascript/runtime/tridash.js: src/backends/javascript/runtime/tridash.min.js
	cp $< $@
	echo "module.exports=Tridash;" >> $@


## Phony Targets

.PHONY: all man js-runtime clean distclean maintainer-clean clean-info \
	info html pdf \
	install installdirs install-bin \
	install-module-build-config install-modules install-data install-man \
	install-info \
	uninstall \
	check check-compiler check-runtime
