# Path to Common Lisp compiler
LISP = @LISP@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

datarootdir = @datarootdir@
datadir = @datadir@
mandir = @mandir@

pkgdatadir = @datadir@/@PACKAGE@

PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

dist_tarfile = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION).tar.gz
bindist_tarfile = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-bin.tar.gz

# Add source directory to search path for out of source builds

srcdir = @srcdir@
VPATH = $(srcdir)


## Build Targets

all: tridashc tridashc.1.gz

plump_sources = plump/dom.lisp \
	plump/entities.lisp \
	plump/lexer.lisp \
	plump/package.lisp \
	plump/parser.lisp \
	plump/processing.lisp \
	plump/special-tags.lisp \
	plump/tag-dispatcher.lisp

sources = tridash.asd \
        src/package.lisp \
        src/interface.lisp \
        src/lexer.lisp \
        src/parser.lisp \
        src/operators.lisp \
        src/node.lisp \
        src/meta-node.lisp \
        src/node-table.lisp \
        src/modules.lisp \
        src/conditions.lisp \
        src/outer-nodes.lisp \
        src/builder.lisp \
        src/coalescer.lisp \
        src/prog-builder.lisp \
        src/main.lisp \
        src/util/package.lisp \
        src/util/cut.lisp \
        src/util/macros.lisp \
        src/builders/html/package.lisp \
        src/builders/html/builder.lisp \
        src/backends/javascript/package.lisp \
        src/backends/javascript/ast.lisp \
        src/backends/javascript/print.lisp \
        src/backends/javascript/analyze.lisp \
        src/backends/javascript/backend.lisp \
        src/backends/javascript/functions.lisp \
        src/backends/javascript/html.lisp \
	$(plump_sources)

build.lisp: build.lisp.in
	@SED@ -e 's|@datadir[@]|$(pkgdatadir)|g' $< > $@

tridashc: build.lisp $(sources)
	$(LISP) --load $(srcdir)/tridash.asd --load $<

tridashc.1.gz: man/tridashc.1
	gzip -c $< > $@


## Clean Targets

clean:
	rm -f build.lisp
	rm -f tridashc
	rm -f tridashc.1.gz
	rm -f $(dist_tarfile)
	rm -f $(bindist_tarfile)

distclean: clean
	rm -f Makefile
	rm -f config.log
	rm -f config.status


## Installation Targets

install: all
	install -d $(DESTDIR)$(bindir)
	install -m 755 tridashc $(DESTDIR)$(bindir)

	install -d $(DESTDIR)$(pkgdatadir)/modules
	install -m 644 $(srcdir)/modules/* $(DESTDIR)$(pkgdatadir)/modules

	install -d $(DESTDIR)$(pkgdatadir)/backends/javascript
	install -m 644 $(srcdir)/src/backends/javascript/runtime/tridash.js $(DESTDIR)$(pkgdatadir)/backends/javascript

	install -d $(DESTDIR)$(mandir)/man1
	install -m 644 tridashc.1.gz $(DESTDIR)$(mandir)/man1


uninstall:
	rm -f $(DESTDIR)$(bindir)/tridashc
	rm -rf $(DESTDIR)$(pkgdatadir)
	rm -f $(DESTDIR)$(mandir)/man1/tridashc.1


## Distribution Tarballs

distfiles = $(sources) \
	plump/README \
	plump/LICENSE \
	src/backends/javascript/runtime/tridash.js \
	modules/core.trd \
	modules/core.yml \
	man/tridashc.1 \
	configure \
	Makefile.in \
	README.md \
	LICENSE.txt

$(dist_tarfile): $(distfiles)
	tar -czf $@ -C $(srcdir) $(distfiles)

$(bindist_tarfile): $(distfiles) install.sh uninstall.sh tridashc tridashc.1.gz
	tar -czf $@ tridashc tridashc.1.gz Makefile -C $(srcdir) $(distfiles) install.sh uninstall.sh

dist: $(dist_tarfile)
bindist: $(bindist_tarfile)


## Testing

test_sources = test/script.lisp \
	test/util.lisp \
	test/lexer.lisp \
	test/parser.lisp \
	test/builder.lisp \
	test/builders/html/builder.lisp \
	test/backends/javascript/backend.lisp

check: $(sources) $(test_sources)
	cd $(srcdir); \
	$(LISP) --load tridash.asd --load test/script.lisp

.PHONY: all clean distclean install uninstall dist bindist check
