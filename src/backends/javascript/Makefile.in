## Tools

UGLIFYJS = @UGLIFYJS@
tridashc = $(top_builddir)/tridashc


## Paths

srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

VPATH = $(srcdir)
testdir = $(top_srcdir)/test/backends/javascript
module_dir = $(top_srcdir)/modules/


## Building Runtime Library

runtime_sources = runtime/module.js \
	runtime/functions.js \
	runtime/exports.js

runtime: runtime/tridash.min.js

runtime/tridash.min.js: $(runtime_sources)
	$(UGLIFYJS) --wrap Tridash -m -o $@ $^


## Testing

test_inputs =  \
	$(testdir)/tests/test001.js \
	$(testdir)/tests/test002.js \
	$(testdir)/tests/test003.js \
	$(testdir)/tests/test004.js \
	$(testdir)/tests/test005.js \
	$(testdir)/tests/test006.js \
	$(testdir)/tests/test007.js \
	$(testdir)/tests/test008.js \
	$(testdir)/tests/test009.js \
	$(testdir)/tests/test010.js \
	$(testdir)/tests/test011.js \
	$(testdir)/tests/test012.js \
	$(testdir)/tests/test013.js \
	$(testdir)/tests/test014.js \
	$(testdir)/tests/test015.js \
	$(testdir)/tests/test016.js \
	$(testdir)/tests/test017.js \
	$(testdir)/tests/test018.js \
	$(testdir)/tests/test019.js \
	$(testdir)/tests/test020.js \
	$(testdir)/tests/test021.js \
	$(testdir)/tests/test022.js \
	$(testdir)/tests/test023.js \
	$(testdir)/tests/test024.js \
	$(testdir)/tests/test025.js \
	$(testdir)/tests/test026.js \
	$(testdir)/tests/test027.js \
	$(testdir)/tests/test028.js \
	$(testdir)/tests/test029.js \
	$(testdir)/tests/test030.js \
	$(testdir)/tests/test031.js \
	$(testdir)/tests/test032.js \
	$(testdir)/tests/test033.js \
	$(testdir)/tests/test034.js \
	$(testdir)/tests/test035.js \
	$(testdir)/tests/test036.js \
	$(testdir)/tests/test037.js \
	$(testdir)/tests/test038.js \
	$(testdir)/tests/test039.js \
	$(testdir)/tests/test040.js \
	$(testdir)/tests/test041.js \
	$(testdir)/tests/core.js

check: $(testdir)/runtime/tridash.js $(test_inputs)
	cd $(testdir); npm test

$(testdir)/runtime/tridash.js: runtime/tridash.min.js
	cp $< $@
	echo "module.exports=Tridash;" >> $@

test_core_sources = $(testdir)/tests/core/tridash-unit.trd \
	$(testdir)/tests/core/test-failures.trd \
	$(testdir)/tests/core/arithmetic-tests.trd \
	$(testdir)/tests/core/comparison-tests.trd \
	$(testdir)/tests/core/logical-tests.trd \
	$(testdir)/tests/core/selection-tests.trd \
	$(testdir)/tests/core/type-tests.trd \
	$(testdir)/tests/core/list-tests.trd \
	$(testdir)/tests/core/string-tests.trd \
	$(testdir)/tests/core/dictionary-tests.trd \
	$(testdir)/tests/core/function-tests.trd \
	$(testdir)/tests/core/pattern-match-tests.trd \
	$(testdir)/tests/core/core-tests.trd

$(testdir)/tests/core.js: $(test_core_sources)
	TRIDASH_MODULE_PATHS=$(module_dir) \
	$(tridashc) $^ -o $@

$(testdir)/tests/core.js: $(tridashc)

## Installation

install: runtime/tridash.min.js
	install -m 644 $< $(installdir)/backends/javascript


## Cleaning

clean: $(test_inputs:.js=.clean)
	rm -f runtime/tridash.min.js
	rm -f $(testdir)/runtime/tridash.js


## Phony Targets

.PHONY: check clean install



## Test Program Rules

%.js: %.trd $(tridashc)
	TRIDASH_MODULE_PATHS=$(module_dir) \
	$(tridashc) $< -o $@

%.clean:
	rm -f $(@:.clean=.js)
