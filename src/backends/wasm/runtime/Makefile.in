EMCC = @EMCC@
WAT2WASM = @WAT2WASM@

srcdir = @srcdir@
top_srcdir = @top_srcdir@

VPATH = $(srcdir)


# Compiling Runtime

## Header File Dependencies


macros_h_deps = macros.h
thunk_h_deps = thunk.h $(macros_h_deps)
copying_h_deps = copying.h

types_h_deps = types.h $(thunk_h_deps) \
	$(strings_h_deps) \
	$(arrays_h_deps) \
	$(funcrefs_h_deps) \
	$(object_h_deps)

memory_h_deps = memory.h $(types_h_deps)
strings_h_deps = strings.h
failures_h_deps = failures.h $(macros_h_deps)
arrays_h_deps = arrays.h $(macros_h_deps)
funcrefs_h_deps = funcrefs.h
hash_table_h_deps = hash-table.h $(strings_h_deps)
objects_h_deps = objects.h $(hash_table_h_deps) $(macros_h_deps)

## Rules

runtime_objects = thunk.o \
	memory.o \
	copying.o \
	strings.o \
	failures.o \
	arrays.o \
	funcrefs.o \
	objects.o \
	hash-table.o

runtime.wasm: $(runtime_objects)
	$(EMCC) -O2 $^ -o $@ -s SIDE_MODULE

thunk.o: thunk.c $(thunk_h_deps) $(copying_h_deps) $(memory_h_deps)
	$(EMCC) -O2 $< -o $@ -c

memory.o: memory.c $(memory_h_deps) $(copying_h_deps)
	$(EMCC) -fPIC -O2 $< -o $@ -c

copying.o: copying.c $(copying_h_deps) \
	$(types_h_deps) \
	$(thunk_h_deps) \
	$(strings_h_deps) \
	$(memory_h_deps) \
	$(failures_h_deps) \
	$(arrays_h_deps) \
	$(funcrefs_h_deps) \
	$(object_h_deps)
	$(EMCC) -O2 $< -o $@ -c

strings.o: strings.c $(strings_h_deps) $(types_h_deps) $(memory_h_deps)
	$(EMCC) -O2 $< -o $@ -c

failures.o: failures.c $(failures_h_deps) $(types_h_deps) $(memory_h_deps) $(copying_h_deps)
	$(EMCC) -O2 $< -o $@ -c

arrays.o: arrays.c $(arrays_h_deps) $(types_h_deps) $(memory_h_deps) $(copying_h_deps)
	$(EMCC) -O2 $< -o $@ -c

funcrefs.o: funcrefs.c $(funcrefs_h_deps) $(memory_h_deps) $(copying_h_deps)
	$(EMCC) -O2 $< -o $@ -c

objects.o: objects.c $(objects_h_deps) \
	$(macros_h_deps) \
	$(types_h_deps) \
	$(memory_h_deps) \
	$(copying_h_deps) \
	$(thunk_h_deps) \
	$(failures_h_deps)
	$(EMCC) -O2 $< -o $@ -c

hash-table.o: hash-table.c $(hash_table_h_deps)
	$(EMCC) -O2 $< -o $@ -c


clean:
	rm -f thunk.o
	rm -f memory.o
	rm -f copying.o
	rm -f strings.o
	rm -f failures.o
	rm -f arrays.o
	rm -f funcrefs.o
	rm -f objects.o
	rm -f hash-table.o
	rm -f runtime.wasm


# Testing

wasm_test_inputs = $(top_srcdir)/test/backends/wasm/runtime/thunks.wasm

check: $(top_srcdir)/test/backends/wasm/runtime/runtime.wasm $(wasm_test_inputs)
	cd $(top_srcdir)/test/backends/wasm; npm test

$(top_srcdir)/test/backends/wasm/runtime/runtime.wasm: runtime.wasm
	cp $< $@


$(top_srcdir)/test/backends/wasm/runtime/thunks.wasm: $(top_srcdir)/test/backends/wasm/runtime/thunks.wat
	$(WAT2WASM) $^ -o $@

.PHONY: clean check
