### Tridash Core Module
### Copyright (C) 2020  Alexander Gutev
###
### This program is free software: you can redistribute it and/or modify
### it under the terms of the GNU General Public License as published by
### the Free Software Foundation, either version 3 of the License, or
### (at your option) any later version.
###
### This program is distributed in the hope that it will be useful,
### but WITHOUT ANY WARRANTY; without even the implied warranty of
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
### GNU General Public License for more details.
###
### You should have received a copy of the GNU General Public License
### along with this program.  If not, see <http://www.gnu.org/licenses/>.
###
### Linking this library statically or dynamically with other modules is
### making a combined work based on this library. Thus, the terms and
### conditions of the GNU General Public License cover the whole
### combination.
###
### As a special exception, the copyright holders of this library give
### you permission to link this library with independent modules to
### produce an executable, regardless of the license terms of these
### independent modules, and to copy and distribute the resulting
### executable under terms of your choice, provided that you also meet,
### for each linked independent module, the terms and conditions of the
### license of that module. An independent module is a module which is
### not derived from or based on this library. If you modify this
### library, you may extend this exception to your version of the
### library, but you are not obliged to do so. If you do not wish to do
### so, delete this exception statement from your version.

### External Function Names for Wasm32 Backend

/module(core)


### Arithmetic Operators

/attribute(+, wasm-name, "+")
/attribute(-, wasm-name, "-")
/attribute(*, wasm-name, "*")
/attribute(/, wasm-name, "/")
/attribute(%, wasm-name, "%")


### Relational Operators

/attribute(<, wasm-name, "<")
/attribute(<=, wasm-name, "<=")
/attribute(>, wasm-name, ">")
/attribute(>=, wasm-name, ">=")


### Selection Operator

/attribute(if, wasm-name, "if")


### Lists

/attribute(cons, wasm-name, runtime.make_list_node)
/attribute(head, wasm-name, runtime.list_node_head)
/attribute(tail, wasm-name, runtime.list_node_tail)

/attribute(Empty-List, wasm-name, runtime.empty_list)


### Failures

/attribute(fail, wasm-name, runtime.make_failure)
/attribute(fail-type, wasm-name, runtime.failure_type);

/attribute(catch, wasm-name, runtime.make_catch_thunk);
