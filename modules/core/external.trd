### Tridash Core Module
### Copyright (C) 2019  Alexander Gutev
###
### This program is free software: you can redistribute it and/or modify
### it under the terms of the GNU General Public License as published by
### the Free Software Foundation, either version 3 of the License, or
### (at your option) any later version.
###
### This program is distributed in the hope that it will be useful,
### but WITHOUT ANY WARRANTY; without even the implied warranty of
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
### GNU General Public License for more details.
###
### You should have received a copy of the GNU General Public License
### along with this program.  If not, see <http://www.gnu.org/licenses/>.
###
### Linking this library statically or dynamically with other modules is
### making a combined work based on this library. Thus, the terms and
### conditions of the GNU General Public License cover the whole
### combination.
###
### As a special exception, the copyright holders of this library give
### you permission to link this library with independent modules to
### produce an executable, regardless of the license terms of these
### independent modules, and to copy and distribute the resulting
### executable under terms of your choice, provided that you also meet,
### for each linked independent module, the terms and conditions of the
### license of that module. An independent module is a module which is
### not derived from or based on this library. If you modify this
### library, you may extend this exception to your version of the
### library, but you are not obliged to do so. If you do not wish to do
### so, delete this exception statement from your version.

### External Meta-Node Declarations

/module(core)

### Arithmetic Operators

/external(+, a, b)
/attribute(+, strictness, or(a,b))

/external(-, a, :(b))
/attribute(-, strictness, or(a,b))

/external(*, a, b)
/attribute(*, strictness, or(a,b))

/external(/, a, b)
/attribute(/, strictness, or(a,b))

/external(%, a, b)
/attribute(%, strictness, or(a,b))


### Comparison Operators

/external(<, a, b)
/attribute(<, strictness, or(a,b))

/external(<=, a, b)
/attribute(<=, strictness, or(a,b))

/external(>, a, b)
/attribute(>, strictness, or(a,b))

/external(>=, a, b)
/attribute(>=, strictness, or(a,b))

/external(=, a, b)
/attribute(=, strictness, or(a,b))

/external(!=, a, b)
/attribute(!=, strictness, or(a,b))


### Logical Operators

/external(and, a, b)
/attribute(and, strictness, a)

/external(or, a, b)
/attribute(or, strictness, a)

/external(not, x)
/attribute(not, strictness, x)
/attribute(not, target-node, not)


### Type Conversions

/external(int, x)
/attribute(int, strictness, x)

/external(real, x)
/attribute(real, target-node, real)

/external(string, x)
/attribute(string, strictness, x)


### Type Checks

/external(int?, x)
/attribute(int?, strictness, x)

/external(real?, x)
/attribute(real?, strictness, x)

/external(string?, x)
/attribute(string?, strictness, x)

/external(inf?, x)
/attribute(inf?, strictness, x)

/external(NaN?, x)
/attribute(NaN?, strictness, x)


### Lists

/external(cons, head, tail)

/external(head, list)
/attribute(head, strictness, list)

/external(tail, list)
/attribute(tail, strictness, tail)

/external(cons?, thing)
/attribute(cons?, strictness, thing)


### Strings

/external(string-at, string, index)
/attribute(string-at, strictness, or(string, index))

/external(string-concat, str1, str2)
/attribute(string-concat, strictness, or(str1, str2))


### Functions

/external(apply%, f, args)
/attribute(apply%, strictness, or(f, args))


### Export Declarations

/export(+, -, *, /, %,
        <, <=, >, >=,
        =, !=,
        and, or, not,
        int, real, string,
        int?, real?, string?, inf?, NaN?,
        cons, head, tail, cons?,
        string-at, string-concat)
