### Tridash Core Module
###
### Contains meta-node stubs, and operator table, for the language
### primitives.

:module(core)
:import(builtin)

## Operators

# Basic Operators

:op(->, 10, right)
:op(:, 5, right)

:op(., 500, left)


# Arithmetic Operators

:op(+, 100, left)
:op(-, 100, left)

:op(*, 200, left)
:op(/, 200, left)


# Comparison Operators

:op(<, 50)
:op(<=, 50)
:op(>, 50)
:op(>=, 50)
:op(=, 50)
:op(!=, 50)


# Logical Operators

:op(and, 25)
:op(or, 20)


# Create stubs for all primitive operators

:extern(+, -, *, /, <, <=, >, >=, =, !=, and, or, not)

:extern(if)

:attribute(not, target-node, not)


# Type Conversions

:extern(int, real, string)

:attribute(int, target-node, int)
:attribute(real, target-node, real)
:attribute(string, target-node, string)

# Type Checks

:extern(int?, real?, string?)


# Export Primitive Nodes

:export(+, -, *, /, <, <=, >, >=, =, !=, and, or, not)
:export(if, case)
:export(int, real)